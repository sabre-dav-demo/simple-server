---
language: php

addons:
  apt:
    packages:
    - cadaver
    - libxml2-utils # xmllint
    - links
    - elinks

cache:
  directories:
  - $HOME/.composer/cache/files

env:
  global:
  - TIME="\n%e"

matrix:
  fast_finish: true
  allow_failures:
  - php: nightly


before_install:
- alias grep='grep --color=auto'
- go get -u github.com/jingweno/ccat
# - pip install --user pygments
- wget https://github.com/travis-util/https-security-checker/archive/master.zip --output-document=- | jar xvf /dev/stdin
- . https-security-checker-master/init-source.bash
# Disabling Xdebug - Debugger and Profiler Tool for PHP
- |
  php -r "print_r(get_loaded_extensions(TRUE));"
  if [ -f ~/.phpenv/versions/$(phpenv version-name)/etc/conf.d/xdebug.ini ]; then
    cat ~/.phpenv/versions/$(phpenv version-name)/etc/conf.d/xdebug.ini
    install --directory ~/.phpenv/versions/$(phpenv version-name)/etc/on-demand
    mv ~/.phpenv/versions/$(phpenv version-name)/etc/conf.d/xdebug.ini ~/.phpenv/versions/$(phpenv version-name)/etc/on-demand
    php -r "print_r(get_loaded_extensions(TRUE));"
  fi


install:
- mkdir data
- mkdir public
- chmod a+rwx data public
- composer require sabre/dav


before_script:
- curl_security_check composer.lock
#^ This checks that the application doesn't use dependencies with known security vulnerabilities


script:
# - php -S localhost:8000 server.php > /dev/null & ps $!
# - curl --retry 10 
# - php -S localhost:8000 server.php & ps $! ; w3m http://localhost:8000 -dump
# - php -S localhost:8000 & ps $! ; curl localhost:8000 --retry 10 --retry-connrefused | w3m -T text/html -dump
# curl: option --retry-connrefused: is unknown
- |
  php -S localhost:8000 server.php > /dev/null & ps $!
  printf 'HEAD / HTTP/1.1\r\nHost: localhost\r\n\r\n' |\
  time socat - TCP4:localhost:8000,forever |\
  grep "^HTTP\|^X-Powered-By: \|^X-Sabre-Version: "
- w3m http://localhost:8000 -dump -o display_link_number=1
- links -dump http://localhost:8000
- elinks -dump-color-mode 4 -dump http://localhost:8000
- |
  cadaver http://localhost:8000 <<- EOT
    unset quiet
    pwd
    put LICENSE
    put README.md
    put server.php
    get LICENSE /dev/null
    get README.md /dev/null
    get server.php /dev/null
    ls
    delete server.php
    ls
    quit
  EOT
- curl --request PROPFIND localhost:8000 | xmllint --format - | grep '<d:href>.*</d:href>'
- |
  curl --request PROPFIND localhost:8000 --include --upload-file - -H "Depth: 1" <<end | xmllint --format -
  <?xml version="1.0"?>
  <a:propfind xmlns:a="DAV:">
    <a:prop>
      <a:resourcetype/>
    </a:prop>
  </a:propfind>
  end
- curl --request PROPFIND localhost:8000/LICENSE | xmllint --format -
- curl localhost:8000/LICENSE | head --lines=1
- curl --request DELETE localhost:8000/README.md -sw '%{http_code}' | grep '^2..$'
- curl --request MKCOL 'localhost:8000/very_very_new_folder' -sw '%{http_code}' | grep '^2..$'
- curl --request MOVE --header 'Destination:http://localhost:8000/very_new_folder' 'localhost:8000/very_very_new_folder'
- curl --request MOVE --header 'Destination:http://localhost:8000/new_folder' 'localhost:8000/very_new_folder' -sw '%{http_code}' | grep '^2..$'
- curl -T 'server.php' 'localhost:8000/new_folder' # PUT is not allowed on non-files.
- curl -T 'server.php' 'localhost:8000/new_folder' -sw '%{http_code}' | grep '^4..$\|^5..$'
- curl -T 'server.php' 'localhost:8000/new_folder/' -sw '%{http_code}' | grep '^2..$'
- curl -T 'server.php' 'localhost:8000/new_folder/server.php' -sw '%{http_code}' | grep '^2..$'
- curl -T 'server.php' 'localhost:8000/server.php' -sw '%{http_code}' | grep '^2..$'


after_script:
- ls --almost-all --color
- ls --almost-all --color data
- ls --almost-all --color public


- composer show --latest
- $GOPATH/bin/ccat composer.json
